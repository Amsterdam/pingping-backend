type Mutation {
  "Update a task with an answer and change the status of the task depending on the input."
  updateTask(input: UpdateTaskInput!): UpdateTaskResponse!
  "Mark a task as completed without providing input."
  completeTask(taskId: String!): CompleteTaskResponse!
  "Revert previous task to go back"
  revertTask(taskId: String!): String!
  createRouteFeedback(input: RouteFeedbackInput!): RouteFeedbackResponse!
}

type Query {
  "Get all routes"
  getRoutes: GetRoutesResponse!
  "Get a specific route"
  getRoute(routeId: String!): RouteResponse!
  "Get a single user task"
  getUserTask(routeId: String!, taskId: String!): UserTaskResponse!
}

# Response
type GetRoutesResponse {
  "Routes currently assigned to the user"
  currentRoutes: [RouteResponse!]
  "All available routes"
  availableRoutes: [RouteResponse!]
  "Archived & completed routes"
  archivedRoutes: [RouteResponse!]
}

type UserTaskResponse {
  status: TaskStatus!
  task: TaskResponse!
  answer: String
  createdAt: Date
}

type TaskResponse {
  taskId: String!
  title: String!
  headerTitle: String!
  description: String
  media: Media
  choices: Choices
  progress: Float
  type: TaskType!
  meta: JSON
}

type RouteResponse {
  routeId: String!
  title: String!
  description: String
  coverImageUrl: String @deprecated(reason: "Use `cover`.")
  cover: Media
  mainColor: String @deprecated(reason: "Use `cover`.")
  thumbnailUrl: String @deprecated(reason: "Use `cover`.")
  isSuggested: Boolean!
  numberOfSteps: Int!
  totalPoints: Int!
  targetAudience: String!
  tips: [RouteTip!]
  progress: Float
  hasSubmittedFeedback: Boolean!
  tasks: [UserTaskResponse]
}

type UpdateTaskResponse {
  previousTask: UserTaskResponse
  nextTask: UserTaskResponse
}

type CompleteTaskResponse {
  previousTask: UserTaskResponse
}

type RouteFeedbackResponse {
  rating: Int
  routeId: String
  feedback: String
  createdAt: Date!
}

type RouteTip {
  title: String!
  description: String!
}

# Input
input UpdateTaskInput {
  taskId: String!
  answer: String
}

input RouteFeedbackInput {
  routeId: String
  rating: Int
  feedback: String
}
