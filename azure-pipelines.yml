resources:
  containers:
    - container: node
      image: circleci/node:12.14.1-browsers
      options: --user 0:0
    - container: mongo
      image: mongo:3.6.11
      options: --user 0:0

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

pool:
  vmImage: 'ubuntu-latest'

container: node

services:
  mongo: mongo

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: 2.2.203
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
        yarn
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages

  - script: yarn install
    displayName: Yarn install

  - script: yarn build
    displayName: Build

  - script: yarn test-azure --exit
    env:
      MONGO_STRING: mongodb://mongo:27017/pingping
      SECRET: somesillyfakesecret
    displayName: Test

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/test-results.xml'
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/cobertura-coverage.xml'